<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="APP_NAME" elementType="Argument">
            <stringProp name="Argument.name">APP_NAME</stringProp>
            <stringProp name="Argument.value">ab483552482324c57b81afc1579fed2c4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Name of the application</stringProp>
          </elementProp>
          <elementProp name="NAME" elementType="Argument">
            <stringProp name="Argument.name">NAME</stringProp>
            <stringProp name="Argument.value">purpleSlate</stringProp>
            <stringProp name="Argument.desc">Name of the user</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CHANNEL_ID" elementType="Argument">
            <stringProp name="Argument.name">CHANNEL_ID</stringProp>
            <stringProp name="Argument.value">keadesktop</stringProp>
            <stringProp name="Argument.desc">Id of the channel</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="LOCALE" elementType="Argument">
            <stringProp name="Argument.name">LOCALE</stringProp>
            <stringProp name="Argument.value">en-US</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Locale </stringProp>
          </elementProp>
          <elementProp name="AUTH_TOKEN" elementType="Argument">
            <stringProp name="Argument.name">AUTH_TOKEN</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group - Query by Single Dimension" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Thread time" enabled="true">
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <eu.luminis.jmeter.wssampler.OpenWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.OpenWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.OpenWebSocketSampler" testname="WebSocket Open Connection" enabled="true">
            <boolProp name="TLS">false</boolProp>
            <stringProp name="server">3.6.188.62</stringProp>
            <stringProp name="port">8080</stringProp>
            <stringProp name="path"></stringProp>
            <stringProp name="connectTimeout">20000</stringProp>
            <stringProp name="readTimeout">50000</stringProp>
          </eu.luminis.jmeter.wssampler.OpenWebSocketSampler>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="-1806431440">TXN_ID</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="681405977">
                <stringProp name="118040362">${__UUID()}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="sales" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="109201676">sales</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="sales less than 2" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="-1280268090">sales less than 2</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="sales greater than 10000" enabled="false">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="-1813850132">sales greater than 10000</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="sales in 2017 and 2019" enabled="false">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="518009380">sales in 2017 and 2019</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="sales for mc-17845" enabled="false">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="-1296715289">sales for mc-17845</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="sales in the first quarter of 2019" enabled="false">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="589934485">sales in the first quarter of 2019</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="sales between 5000 and 15000" enabled="false">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="-203342166">sales between 5000 and 15000</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="city in 2019" enabled="false">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="1027825996">city in 2019</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="city in 2018 and  2019" enabled="false">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="1216387304">city in 2018 and  2019</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="number of state in 2019" enabled="false">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="-1480621088">number of state in 2019</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="ship mode in 2018 and 2019" enabled="false">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="764597751">Test Plan</stringProp>
              <stringProp name="-1865372504">ship mode in 2018 and 2019</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <eu.luminis.jmeter.wssampler.CloseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.CloseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.CloseWebSocketSampler" testname="WebSocket Close" enabled="true">
            <stringProp name="statusCode">1000</stringProp>
            <stringProp name="readTimeout">6000</stringProp>
          </eu.luminis.jmeter.wssampler.CloseWebSocketSampler>
          <hashTree/>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="false">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">/home/ragul/assertions/keamobile/aggregate_logs</stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="sales" enabled="true"/>
      <hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="sales-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server">3.6.188.62</stringProp>
          <stringProp name="port">8080</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: null
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="sales-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="entity Assertion" enabled="true">
            <stringProp name="JSON_PATH">.resp.entities</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="metricCard Assetion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;Sales&quot;,&quot;value&quot;:573559.29,&quot;type&quot;:&quot;Result&quot;,&quot;description&quot;:&quot;Sales&quot;},{&quot;name&quot;:&quot;Change of Sales&quot;,&quot;value&quot;:&quot;19.32%&quot;,&quot;type&quot;:&quot;Change&quot;,&quot;description&quot;:&quot;The Sales has gone up by 92856.7 or 19.32%&quot;},{&quot;name&quot;:&quot;Average Sales &quot;,&quot;value&quot;:225.46,&quot;type&quot;:&quot;Average&quot;,&quot;description&quot;:&quot;The average of sales  is 225.46&quot;},{&quot;name&quot;:&quot;Record Count&quot;,&quot;value&quot;:2544,&quot;type&quot;:&quot;Record Count&quot;,&quot;description&quot;:&quot;Result set is made up of 2544 rows, forming 16.1% of the entire data&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsBasicQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsBasicQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;DataQuality&quot;,&quot;queryName&quot;:&quot;dataQualityQuery&quot;},{&quot;displayName&quot;:&quot;TrendLineChart&quot;,&quot;queryName&quot;:&quot;timeBreakQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsProQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsProQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;Forecast&quot;,&quot;queryName&quot;:&quot;forecastQuery&quot;},{&quot;displayName&quot;:&quot;ContributeFactor-Dimension&quot;,&quot;queryName&quot;:&quot;cfPrimaryDimensionQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="dataQuality-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;dataQualityQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="dataQuality-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="DataQuality Assertion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;Sales - Zero Count&quot;,&quot;value&quot;:&quot;0&quot;,&quot;type&quot;:&quot;totalZeroCountQuery&quot;,&quot;description&quot;:&quot;Out of the 2544 values, 0 or 0% are zeroes and 2544 or 100% are non-zero.&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="trendLineChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;timeBreakQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="trendLineChart-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="TrendLineChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2019-01-01T00:00:00.000&quot;,&quot;2019-02-01T00:00:00.000&quot;,&quot;2019-03-01T00:00:00.000&quot;,&quot;2019-04-01T00:00:00.000&quot;,&quot;2019-05-01T00:00:00.000&quot;,&quot;2019-06-01T00:00:00.000&quot;,&quot;2019-07-01T00:00:00.000&quot;,&quot;2019-08-01T00:00:00.000&quot;,&quot;2019-09-01T00:00:00.000&quot;,&quot;2019-10-01T00:00:00.000&quot;,&quot;2019-11-01T00:00:00.000&quot;],&quot;yAxis&quot;:[39462.88658571243,23506.78231072426,52891.38480293751,40021.68022727966,44774.9321898222,47220.49793922901,47183.87308752537,63760.01971805096,91427.86670136452,75551.66107082367,47757.7058981657],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;Sales - Monthly Trend&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;sales&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="foreCastChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;forecastQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="foreCast-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ForeCastChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2015-01-01&quot;,&quot;2016-01-01&quot;,&quot;2017-01-01&quot;,&quot;2018-01-01&quot;,&quot;2019-01-01&quot;,&quot;2022-01-01&quot;],&quot;yAxis&quot;:[479442,611325,1458945,480702,573559,560551],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;Sales - Yearly Trend (Forecast)&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;sales&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="ContributingFactor-Dimension-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;cfPrimaryDimensionQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;:[{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="contributingFactorDimension-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ContributingFactor-Dimension-Assertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[{&quot;percentageDistribution&quot;:[]}],&quot;xAxis&quot;:[&quot;Standard Class&quot;,&quot;Second Class&quot;,&quot;First Class&quot;,&quot;Same Day&quot;],&quot;yAxis&quot;:[294288.8599141836,121121.48868346214,117508.78797447681,40640.15395951271],&quot;chartType&quot;:&quot;piechart&quot;,&quot;yAxisLabel&quot;:&quot;Sales&quot;,&quot;chartTitle&quot;:&quot;Sales By Ship Mode&quot;,&quot;xAxisLabel&quot;:&quot;Ship Mode&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.CloseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.CloseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.CloseWebSocketSampler" testname="WebSocket Close" enabled="false">
          <stringProp name="statusCode">1000</stringProp>
          <stringProp name="readTimeout">6000</stringProp>
        </eu.luminis.jmeter.wssampler.CloseWebSocketSampler>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="sales less than 2" enabled="true"/>
      <hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="sales less than 2-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server">3.6.188.62</stringProp>
          <stringProp name="port">8080</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales less than 2&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: null
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="sales less than 2-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="entity Assertion" enabled="true">
            <stringProp name="JSON_PATH">.resp.entities</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;type&quot;:&quot;measure_value&quot;,&quot;name&quot;:&quot;sales&quot;,&quot;operator&quot;:&quot;lt&quot;,&quot;resolutionValue&quot;:&quot;2&quot;,&quot;value&quot;:&quot;sales&quot;,&quot;displayName&quot;:&quot;Sales&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="metricCard Assetion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;Sales&quot;,&quot;value&quot;:32.6,&quot;type&quot;:&quot;Result&quot;,&quot;description&quot;:&quot;Sales Less Than 2&quot;},{&quot;name&quot;:&quot;Change of Sales&quot;,&quot;value&quot;:&quot;19.69%&quot;,&quot;type&quot;:&quot;Change&quot;,&quot;description&quot;:&quot;The Sales has gone up by 5.36 or 19.69%&quot;},{&quot;name&quot;:&quot;Average Sales &quot;,&quot;value&quot;:1.48,&quot;type&quot;:&quot;Average&quot;,&quot;description&quot;:&quot;The average of sales  is 1.48&quot;},{&quot;name&quot;:&quot;Record Count&quot;,&quot;value&quot;:22,&quot;type&quot;:&quot;Record Count&quot;,&quot;description&quot;:&quot;Result set is made up of 22 rows, forming 0.1% of the entire data&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsBasicQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsBasicQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;DataQuality&quot;,&quot;queryName&quot;:&quot;dataQualityQuery&quot;},{&quot;displayName&quot;:&quot;TrendLineChart&quot;,&quot;queryName&quot;:&quot;timeBreakQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsProQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsProQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;Forecast&quot;,&quot;queryName&quot;:&quot;forecastQuery&quot;},{&quot;displayName&quot;:&quot;ContributeFactor-Dimension&quot;,&quot;queryName&quot;:&quot;cfPrimaryDimensionQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="dataQuality-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales less than 2&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;dataQualityQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;:[{&quot;type&quot;:&quot;measure_value&quot;,&quot;name&quot;:&quot;sales&quot;,&quot;operator&quot;:&quot;lt&quot;,&quot;resolutionValue&quot;:&quot;2&quot;,&quot;value&quot;:&quot;sales&quot;,&quot;displayName&quot;:&quot;Sales&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="dataQuality-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="DataQuality Assertion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;Sales - Zero Count&quot;,&quot;value&quot;:&quot;0&quot;,&quot;type&quot;:&quot;totalZeroCountQuery&quot;,&quot;description&quot;:&quot;Out of the 22 values, 0 or 0% are zeroes and 22 or 100% are non-zero.&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="trendLineChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales less than 2&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;timeBreakQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;:[{&quot;type&quot;:&quot;measure_value&quot;,&quot;name&quot;:&quot;sales&quot;,&quot;operator&quot;:&quot;lt&quot;,&quot;resolutionValue&quot;:&quot;2&quot;,&quot;value&quot;:&quot;sales&quot;,&quot;displayName&quot;:&quot;Sales&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="trendLineChart-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="TrendLineChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2019-03-01T00:00:00.000&quot;,&quot;2019-04-01T00:00:00.000&quot;,&quot;2019-05-01T00:00:00.000&quot;,&quot;2019-06-01T00:00:00.000&quot;,&quot;2019-07-01T00:00:00.000&quot;,&quot;2019-08-01T00:00:00.000&quot;,&quot;2019-09-01T00:00:00.000&quot;,&quot;2019-10-01T00:00:00.000&quot;,&quot;2019-11-01T00:00:00.000&quot;],&quot;yAxis&quot;:[2.343999981880188,6.73799991607666,8.491999983787537,2.0679999589920044,1.0800000429153442,1.5839999914169312,5.20799994468689,2.430000066757202,2.656000018119812],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;Sales - Monthly Trend&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;sales&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="foreCastChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales less than 2&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;forecastQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;:[{&quot;type&quot;:&quot;measure_value&quot;,&quot;name&quot;:&quot;sales&quot;,&quot;operator&quot;:&quot;lt&quot;,&quot;resolutionValue&quot;:&quot;2&quot;,&quot;value&quot;:&quot;sales&quot;,&quot;displayName&quot;:&quot;Sales&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="foreCast-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ForeCastChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2015-01-01&quot;,&quot;2016-01-01&quot;,&quot;2017-01-01&quot;,&quot;2018-01-01&quot;,&quot;2019-01-01&quot;,&quot;2022-01-01&quot;],&quot;yAxis&quot;:[19,34,83,27,32,67],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;Sales - Yearly Trend (Forecast)&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;sales&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="ContributingFactor-Dimension-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales less than 2&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;cfPrimaryDimensionQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;:[{&quot;type&quot;:&quot;measure_value&quot;,&quot;name&quot;:&quot;sales&quot;,&quot;operator&quot;:&quot;lt&quot;,&quot;resolutionValue&quot;:&quot;2&quot;,&quot;value&quot;:&quot;sales&quot;,&quot;displayName&quot;:&quot;Sales&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="contributingFactorDimension-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ContributingFactor-Dimension-Assertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[{&quot;percentageDistribution&quot;:[]}],&quot;xAxis&quot;:[&quot;Standard Class&quot;,&quot;First Class&quot;,&quot;Same Day&quot;,&quot;Second Class&quot;],&quot;yAxis&quot;:[23.28599989414215,5.606000065803528,1.9639999866485596,1.74399995803833],&quot;chartType&quot;:&quot;piechart&quot;,&quot;yAxisLabel&quot;:&quot;Sales&quot;,&quot;chartTitle&quot;:&quot;Sales By Ship Mode&quot;,&quot;xAxisLabel&quot;:&quot;Ship Mode&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.CloseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.CloseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.CloseWebSocketSampler" testname="WebSocket Close" enabled="false">
          <stringProp name="statusCode">1000</stringProp>
          <stringProp name="readTimeout">6000</stringProp>
        </eu.luminis.jmeter.wssampler.CloseWebSocketSampler>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="sales greater than 10000" enabled="true"/>
      <hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="sales greater than 10000-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server">3.6.188.62</stringProp>
          <stringProp name="port">8080</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales greater than 10000&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: null
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="sales greater than 10000-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="entity Assertion" enabled="true">
            <stringProp name="JSON_PATH">.resp.entities</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;type&quot;:&quot;measure_value&quot;,&quot;name&quot;:&quot;sales&quot;,&quot;operator&quot;:&quot;gt&quot;,&quot;resolutionValue&quot;:&quot;10000&quot;,&quot;value&quot;:&quot;sales&quot;,&quot;displayName&quot;:&quot;Sales&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="metricCard Assetion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;Sales&quot;,&quot;value&quot;:25199.93,&quot;type&quot;:&quot;Result&quot;,&quot;description&quot;:&quot;Sales Greater Than 10000&quot;},{&quot;name&quot;:&quot;Change of Sales&quot;,&quot;value&quot;:&quot;11.31%&quot;,&quot;type&quot;:&quot;Change&quot;,&quot;description&quot;:&quot;The Sales has gone up by 2561.45 or 11.31%&quot;},{&quot;name&quot;:&quot;Average Sales &quot;,&quot;value&quot;:12599.96,&quot;type&quot;:&quot;Average&quot;,&quot;description&quot;:&quot;The average of sales  is 12599.96&quot;},{&quot;name&quot;:&quot;Record Count&quot;,&quot;value&quot;:2,&quot;type&quot;:&quot;Record Count&quot;,&quot;description&quot;:&quot;Result set is made up of 2 rows, forming 0.0% of the entire data&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsBasicQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsBasicQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;DataQuality&quot;,&quot;queryName&quot;:&quot;dataQualityQuery&quot;},{&quot;displayName&quot;:&quot;TrendLineChart&quot;,&quot;queryName&quot;:&quot;timeBreakQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsProQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsProQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;Forecast&quot;,&quot;queryName&quot;:&quot;forecastQuery&quot;},{&quot;displayName&quot;:&quot;ContributeFactor-Dimension&quot;,&quot;queryName&quot;:&quot;cfPrimaryDimensionQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="dataQuality-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales greater than 10000&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;dataQualityQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;:[{&quot;type&quot;:&quot;measure_value&quot;,&quot;name&quot;:&quot;sales&quot;,&quot;operator&quot;:&quot;gt&quot;,&quot;resolutionValue&quot;:&quot;10000&quot;,&quot;value&quot;:&quot;sales&quot;,&quot;displayName&quot;:&quot;Sales&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="dataQuality-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="DataQuality Assertion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;Sales - Zero Count&quot;,&quot;value&quot;:&quot;0&quot;,&quot;type&quot;:&quot;totalZeroCountQuery&quot;,&quot;description&quot;:&quot;Out of the 2 values, 0 or 0% are zeroes and 2 or 100% are non-zero.&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="trendLineChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales greater than 10000&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;timeBreakQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;measure_value&quot;,&quot;name&quot;:&quot;sales&quot;,&quot;operator&quot;:&quot;gt&quot;,&quot;resolutionValue&quot;:&quot;10000&quot;,&quot;value&quot;:&quot;sales&quot;,&quot;displayName&quot;:&quot;Sales&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="trendLineChart-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="TrendLineChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2019-03-01T00:00:00.000&quot;,&quot;2019-10-01T00:00:00.000&quot;],&quot;yAxis&quot;:[13999.9599609375,11199.9677734375],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;Sales - Monthly Trend&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;sales&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="foreCastChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales greater than 10000&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;forecastQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;measure_value&quot;,&quot;name&quot;:&quot;sales&quot;,&quot;operator&quot;:&quot;gt&quot;,&quot;resolutionValue&quot;:&quot;10000&quot;,&quot;value&quot;:&quot;sales&quot;,&quot;displayName&quot;:&quot;Sales&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="foreCast-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ForeCastChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2016-01-01&quot;,&quot;2017-01-01&quot;,&quot;2018-01-01&quot;,&quot;2019-01-01&quot;,&quot;2022-01-01&quot;],&quot;yAxis&quot;:[17499,71399,22638,25199,13592],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;Sales - Yearly Trend (Forecast)&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;sales&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="ContributingFactor-Dimension-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales greater than 10000&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;cfPrimaryDimensionQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;measure_value&quot;,&quot;name&quot;:&quot;sales&quot;,&quot;operator&quot;:&quot;gt&quot;,&quot;resolutionValue&quot;:&quot;10000&quot;,&quot;value&quot;:&quot;sales&quot;,&quot;displayName&quot;:&quot;Sales&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="contributingFactorDimension-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ContributingFactor-Dimension-Assertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[{&quot;percentageDistribution&quot;:[]}],&quot;xAxis&quot;:[&quot;First Class&quot;],&quot;yAxis&quot;:[25199.927734375],&quot;chartType&quot;:&quot;piechart&quot;,&quot;yAxisLabel&quot;:&quot;Sales&quot;,&quot;chartTitle&quot;:&quot;Sales By Ship Mode&quot;,&quot;xAxisLabel&quot;:&quot;Ship Mode&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.CloseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.CloseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.CloseWebSocketSampler" testname="WebSocket Close" enabled="false">
          <stringProp name="statusCode">1000</stringProp>
          <stringProp name="readTimeout">6000</stringProp>
        </eu.luminis.jmeter.wssampler.CloseWebSocketSampler>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="sales in 2017 and 2019" enabled="true"/>
      <hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="sales in 2017 and 2019-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server">3.6.188.62</stringProp>
          <stringProp name="port">8080</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales in 2017 and 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: null
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="sales in 2017 and 2019-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="entity Assertion" enabled="true">
            <stringProp name="JSON_PATH">.resp.entities</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2017-01-01,2017-12-31&quot;,&quot;value&quot;:&quot;2017&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="metricCard Assetion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;Sales&quot;,&quot;value&quot;:2032504.56,&quot;type&quot;:&quot;Result&quot;,&quot;description&quot;:&quot;Sales In 2017 And 2019&quot;},{&quot;name&quot;:&quot;Change of Sales&quot;,&quot;value&quot;:&quot;86.17%&quot;,&quot;type&quot;:&quot;Change&quot;,&quot;description&quot;:&quot;The Sales has gone up by 940769.29 or 86.17%&quot;},{&quot;name&quot;:&quot;Average Sales &quot;,&quot;value&quot;:222.94,&quot;type&quot;:&quot;Average&quot;,&quot;description&quot;:&quot;The average of sales  is 222.94&quot;},{&quot;name&quot;:&quot;Record Count&quot;,&quot;value&quot;:9117,&quot;type&quot;:&quot;Record Count&quot;,&quot;description&quot;:&quot;Result set is made up of 9117 rows, forming 57.5% of the entire data&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsBasicQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsBasicQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;DataQuality&quot;,&quot;queryName&quot;:&quot;dataQualityQuery&quot;},{&quot;displayName&quot;:&quot;TrendLineChart&quot;,&quot;queryName&quot;:&quot;timeBreakQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsProQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsProQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;Forecast&quot;,&quot;queryName&quot;:&quot;forecastQuery&quot;},{&quot;displayName&quot;:&quot;ContributeFactor-Dimension&quot;,&quot;queryName&quot;:&quot;cfPrimaryDimensionQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="dataQuality-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales in 2017 and 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;dataQualityQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2017-01-01,2017-12-31&quot;,&quot;value&quot;:&quot;2017&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="dataQuality-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="DataQuality Assertion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;Sales - Zero Count&quot;,&quot;value&quot;:&quot;0&quot;,&quot;type&quot;:&quot;totalZeroCountQuery&quot;,&quot;description&quot;:&quot;Out of the 9117 values, 0 or 0% are zeroes and 9117 or 100% are non-zero.&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="trendLineChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales in 2017 and 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;timeBreakQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2017-01-01,2017-12-31&quot;,&quot;value&quot;:&quot;2017&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="trendLineChart-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="TrendLineChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2017-01-01T00:00:00.000&quot;,&quot;2018-01-01T00:00:00.000&quot;,&quot;2019-01-01T00:00:00.000&quot;],&quot;yAxis&quot;:[1458945.269093275,480702.585942328,573559.2905316353],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;Sales - Yearly Trend&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;sales&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="foreCastChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales in 2017 and 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;forecastQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2017-01-01,2017-12-31&quot;,&quot;value&quot;:&quot;2017&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="foreCast-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ForeCastChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2015-01-01&quot;,&quot;2016-01-01&quot;,&quot;2017-01-01&quot;,&quot;2018-01-01&quot;,&quot;2019-01-01&quot;,&quot;2022-01-01&quot;],&quot;yAxis&quot;:[479442,611325,1458945,480702,573559,560551],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;Sales - Yearly Trend (Forecast)&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;sales&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="ContributingFactor-Dimension-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales in 2017 and 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;cfPrimaryDimensionQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2017-01-01,2017-12-31&quot;,&quot;value&quot;:&quot;2017&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="contributingFactorDimension-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ContributingFactor-Dimension-Assertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[{&quot;percentageDistribution&quot;:[]}],&quot;xAxis&quot;:[&quot;Standard Class&quot;,&quot;Second Class&quot;,&quot;First Class&quot;,&quot;Same Day&quot;],&quot;yAxis&quot;:[1082740.9501308203,413443.6940398216,398128.2817198038,138191.63373446465],&quot;chartType&quot;:&quot;piechart&quot;,&quot;yAxisLabel&quot;:&quot;Sales&quot;,&quot;chartTitle&quot;:&quot;Sales By Ship Mode&quot;,&quot;xAxisLabel&quot;:&quot;Ship Mode&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.CloseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.CloseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.CloseWebSocketSampler" testname="WebSocket Close" enabled="false">
          <stringProp name="statusCode">1000</stringProp>
          <stringProp name="readTimeout">6000</stringProp>
        </eu.luminis.jmeter.wssampler.CloseWebSocketSampler>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="sales for mc-17845" enabled="true"/>
      <hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="sales for mc-17845-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server">3.6.188.62</stringProp>
          <stringProp name="port">8080</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales for mc-17845&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: null
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="sales for mc-17845-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="entity Assertion" enabled="true">
            <stringProp name="JSON_PATH">.resp.entities</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;type&quot;:&quot;dimension_value&quot;,&quot;name&quot;:&quot;customer_id&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;mc-17845&quot;,&quot;value&quot;:&quot;mc-17845&quot;,&quot;displayName&quot;:&quot;Customer ID&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="metricCard Assetion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;Sales&quot;,&quot;value&quot;:429.59,&quot;type&quot;:&quot;Result&quot;,&quot;description&quot;:&quot;Sales For Mc-17845&quot;},{&quot;name&quot;:&quot;Change of Sales&quot;,&quot;value&quot;:&quot;-64.45%&quot;,&quot;type&quot;:&quot;Change&quot;,&quot;description&quot;:&quot;The Sales has gone down by -778.97 or -64.45%&quot;},{&quot;name&quot;:&quot;Average Sales &quot;,&quot;value&quot;:214.8,&quot;type&quot;:&quot;Average&quot;,&quot;description&quot;:&quot;The average of sales  is 214.8&quot;},{&quot;name&quot;:&quot;Record Count&quot;,&quot;value&quot;:2,&quot;type&quot;:&quot;Record Count&quot;,&quot;description&quot;:&quot;Result set is made up of 2 rows, forming 0.0% of the entire data&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsBasicQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsBasicQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;DataQuality&quot;,&quot;queryName&quot;:&quot;dataQualityQuery&quot;},{&quot;displayName&quot;:&quot;TrendLineChart&quot;,&quot;queryName&quot;:&quot;timeBreakQuery&quot;},{&quot;displayName&quot;:&quot;InsightChart&quot;,&quot;queryName&quot;:&quot;dimensionsQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsProQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsProQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;Forecast&quot;,&quot;queryName&quot;:&quot;forecastQuery&quot;},{&quot;displayName&quot;:&quot;ContributeFactor-Dimension&quot;,&quot;queryName&quot;:&quot;cfPrimaryDimensionQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="dataQuality-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales for mc-17845&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;dataQualityQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;dimension_value&quot;,&quot;name&quot;:&quot;customer_id&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;mc-17845&quot;,&quot;value&quot;:&quot;mc-17845&quot;,&quot;displayName&quot;:&quot;Customer ID&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="dataQuality-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="DataQuality Assertion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;Sales - Zero Count&quot;,&quot;value&quot;:&quot;0&quot;,&quot;type&quot;:&quot;totalZeroCountQuery&quot;,&quot;description&quot;:&quot;Out of the 2 values, 0 or 0% are zeroes and 2 or 100% are non-zero.&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="trendLineChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales for mc-17845&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;timeBreakQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;dimension_value&quot;,&quot;name&quot;:&quot;customer_id&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;mc-17845&quot;,&quot;value&quot;:&quot;mc-17845&quot;,&quot;displayName&quot;:&quot;Customer ID&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="trendLineChart-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="TrendLineChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="foreCastChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales for mc-17845&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;forecastQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;dimension_value&quot;,&quot;name&quot;:&quot;customer_id&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;mc-17845&quot;,&quot;value&quot;:&quot;mc-17845&quot;,&quot;displayName&quot;:&quot;Customer ID&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="foreCast-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ForeCastChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2016-01-01&quot;,&quot;2017-01-01&quot;,&quot;2018-01-01&quot;,&quot;2019-01-01&quot;,&quot;2022-01-01&quot;],&quot;yAxis&quot;:[491,4210,1208,429,-645],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;Sales - Yearly Trend (Forecast)&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;sales&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="ContributingFactor-Dimension-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales for mc-17845&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;cfPrimaryDimensionQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;dimension_value&quot;,&quot;name&quot;:&quot;customer_id&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;mc-17845&quot;,&quot;value&quot;:&quot;mc-17845&quot;,&quot;displayName&quot;:&quot;Customer ID&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="contributingFactorDimension-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ContributingFactor-Dimension-Assertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[{&quot;percentageDistribution&quot;:[]},{&quot;recordCount&quot;:[2]}],&quot;xAxis&quot;:[&quot;Standard Class&quot;],&quot;yAxis&quot;:[429.5919876098633],&quot;chartType&quot;:&quot;piechart&quot;,&quot;yAxisLabel&quot;:&quot;Sales&quot;,&quot;chartTitle&quot;:&quot;Sales By Ship Mode&quot;,&quot;xAxisLabel&quot;:&quot;Ship Mode&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.CloseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.CloseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.CloseWebSocketSampler" testname="WebSocket Close" enabled="false">
          <stringProp name="statusCode">1000</stringProp>
          <stringProp name="readTimeout">6000</stringProp>
        </eu.luminis.jmeter.wssampler.CloseWebSocketSampler>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="sales in the first quarter of 2019" enabled="true"/>
      <hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="sales in the first quarter of 2019-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server">3.6.188.62</stringProp>
          <stringProp name="port">8080</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales in the first quarter of 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: null
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="sales in the first quarter of 2019-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="entity Assertion" enabled="true">
            <stringProp name="JSON_PATH">.resp.entities</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-03-31&quot;,&quot;value&quot;:&quot;the first quarter of 2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="metricCard Assetion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;Sales&quot;,&quot;value&quot;:115861.05,&quot;type&quot;:&quot;Result&quot;,&quot;description&quot;:&quot;Sales In The First Quarter Of 2019&quot;},{&quot;name&quot;:&quot;Change of Sales&quot;,&quot;value&quot;:&quot;-32.75%&quot;,&quot;type&quot;:&quot;Change&quot;,&quot;description&quot;:&quot;The Sales has gone down by -56426.42 or -32.75%&quot;},{&quot;name&quot;:&quot;Average Sales &quot;,&quot;value&quot;:243.92,&quot;type&quot;:&quot;Average&quot;,&quot;description&quot;:&quot;The average of sales  is 243.92&quot;},{&quot;name&quot;:&quot;Record Count&quot;,&quot;value&quot;:475,&quot;type&quot;:&quot;Record Count&quot;,&quot;description&quot;:&quot;Result set is made up of 475 rows, forming 3.0% of the entire data&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsBasicQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsBasicQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;DataQuality&quot;,&quot;queryName&quot;:&quot;dataQualityQuery&quot;},{&quot;displayName&quot;:&quot;TrendLineChart&quot;,&quot;queryName&quot;:&quot;timeBreakQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsProQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsProQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;Forecast&quot;,&quot;queryName&quot;:&quot;forecastQuery&quot;},{&quot;displayName&quot;:&quot;ContributeFactor-Dimension&quot;,&quot;queryName&quot;:&quot;cfPrimaryDimensionQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="dataQuality-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales in the first quarter of 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;dataQualityQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-03-31&quot;,&quot;value&quot;:&quot;the first quarter of 2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="dataQuality-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="DataQuality Assertion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;Sales - Zero Count&quot;,&quot;value&quot;:&quot;0&quot;,&quot;type&quot;:&quot;totalZeroCountQuery&quot;,&quot;description&quot;:&quot;Out of the 475 values, 0 or 0% are zeroes and 475 or 100% are non-zero.&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="trendLineChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales in the first quarter of 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;timeBreakQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;:[{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-03-31&quot;,&quot;value&quot;:&quot;the first quarter of 2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="trendLineChart-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="TrendLineChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2018-12-31T00:00:00.000&quot;,&quot;2019-01-07T00:00:00.000&quot;,&quot;2019-01-14T00:00:00.000&quot;,&quot;2019-01-21T00:00:00.000&quot;,&quot;2019-01-28T00:00:00.000&quot;,&quot;2019-02-04T00:00:00.000&quot;,&quot;2019-02-11T00:00:00.000&quot;,&quot;2019-02-18T00:00:00.000&quot;,&quot;2019-02-25T00:00:00.000&quot;,&quot;2019-03-04T00:00:00.000&quot;,&quot;2019-03-11T00:00:00.000&quot;,&quot;2019-03-18T00:00:00.000&quot;,&quot;2019-03-25T00:00:00.000&quot;],&quot;yAxis&quot;:[3561.381993293762,6667.07288646698,14894.459785938263,9870.629988193512,5957.341932296753,7511.819902896881,2895.3469808101654,7092.223378658295,5805.166036725044,5547.605932474136,8196.075006723404,9514.017961740494,28347.91191315651],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;Sales - Weekly Trend&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;sales&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="foreCastChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales in the first quarter of 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;forecastQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-03-31&quot;,&quot;value&quot;:&quot;the first quarter of 2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="foreCast-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ForeCastChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2015-01-01&quot;,&quot;2016-01-01&quot;,&quot;2017-01-01&quot;,&quot;2018-01-01&quot;,&quot;2019-01-01&quot;,&quot;2022-01-01&quot;],&quot;yAxis&quot;:[479442,611325,1458945,480702,573559,560551],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;Sales - Yearly Trend (Forecast)&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;sales&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="ContributingFactor-Dimension-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales in the first quarter of 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;cfPrimaryDimensionQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-03-31&quot;,&quot;value&quot;:&quot;the first quarter of 2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;measure&quot;,&quot;name&quot;:&quot;measure&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;sales&quot;,&quot;value&quot;:&quot;sales&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="contributingFactorDimension-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ContributingFactor-Dimension-Assertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[{&quot;percentageDistribution&quot;:[]}],&quot;xAxis&quot;:[&quot;Standard Class&quot;,&quot;First Class&quot;,&quot;Second Class&quot;,&quot;Same Day&quot;],&quot;yAxis&quot;:[54323.87268316746,31595.991272449493,25955.406756401062,3985.782987356186],&quot;chartType&quot;:&quot;piechart&quot;,&quot;yAxisLabel&quot;:&quot;Sales&quot;,&quot;chartTitle&quot;:&quot;Sales By Ship Mode&quot;,&quot;xAxisLabel&quot;:&quot;Ship Mode&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.CloseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.CloseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.CloseWebSocketSampler" testname="WebSocket Close" enabled="false">
          <stringProp name="statusCode">1000</stringProp>
          <stringProp name="readTimeout">6000</stringProp>
        </eu.luminis.jmeter.wssampler.CloseWebSocketSampler>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="sales between 5000 and 15000" enabled="true"/>
      <hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="sales between 5000 and 15000-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server">3.6.188.62</stringProp>
          <stringProp name="port">8080</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales between 5000 and 15000&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: null
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="sales between 5000 and 15000-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="entity Assertion" enabled="true">
            <stringProp name="JSON_PATH">.resp.entities</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;type&quot;:&quot;measure_value&quot;,&quot;name&quot;:&quot;sales&quot;,&quot;operator&quot;:&quot;between&quot;,&quot;resolutionValue&quot;:&quot;5000,15000&quot;,&quot;value&quot;:&quot;sales&quot;,&quot;displayName&quot;:&quot;Sales&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="metricCard Assetion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;Sales&quot;,&quot;value&quot;:48927.79,&quot;type&quot;:&quot;Result&quot;,&quot;description&quot;:&quot;Sales Between 5000 And 15000&quot;},{&quot;name&quot;:&quot;Change of Sales&quot;,&quot;value&quot;:&quot;49.18%&quot;,&quot;type&quot;:&quot;Change&quot;,&quot;description&quot;:&quot;The Sales has gone up by 16130.28 or 49.18%&quot;},{&quot;name&quot;:&quot;Average Sales &quot;,&quot;value&quot;:8154.63,&quot;type&quot;:&quot;Average&quot;,&quot;description&quot;:&quot;The average of sales  is 8154.63&quot;},{&quot;name&quot;:&quot;Record Count&quot;,&quot;value&quot;:6,&quot;type&quot;:&quot;Record Count&quot;,&quot;description&quot;:&quot;Result set is made up of 6 rows, forming 0.0% of the entire data&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsBasicQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsBasicQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;DataQuality&quot;,&quot;queryName&quot;:&quot;dataQualityQuery&quot;},{&quot;displayName&quot;:&quot;TrendLineChart&quot;,&quot;queryName&quot;:&quot;timeBreakQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsProQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsProQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;Forecast&quot;,&quot;queryName&quot;:&quot;forecastQuery&quot;},{&quot;displayName&quot;:&quot;ContributeFactor-Dimension&quot;,&quot;queryName&quot;:&quot;cfPrimaryDimensionQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="dataQuality-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales between 5000 and 15000&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;dataQualityQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;measure_value&quot;,&quot;name&quot;:&quot;sales&quot;,&quot;operator&quot;:&quot;between&quot;,&quot;resolutionValue&quot;:&quot;5000,15000&quot;,&quot;value&quot;:&quot;sales&quot;,&quot;displayName&quot;:&quot;Sales&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="dataQuality-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="DataQuality Assertion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;Sales - Zero Count&quot;,&quot;value&quot;:&quot;0&quot;,&quot;type&quot;:&quot;totalZeroCountQuery&quot;,&quot;description&quot;:&quot;Out of the 6 values, 0 or 0% are zeroes and 6 or 100% are non-zero.&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="trendLineChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales between 5000 and 15000&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;timeBreakQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;measure_value&quot;,&quot;name&quot;:&quot;sales&quot;,&quot;operator&quot;:&quot;between&quot;,&quot;resolutionValue&quot;:&quot;5000,15000&quot;,&quot;value&quot;:&quot;sales&quot;,&quot;displayName&quot;:&quot;Sales&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="trendLineChart-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="TrendLineChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2019-01-01T00:00:00.000&quot;,&quot;2019-03-01T00:00:00.000&quot;,&quot;2019-10-01T00:00:00.000&quot;,&quot;2019-11-01T00:00:00.000&quot;],&quot;yAxis&quot;:[5443.9599609375,13999.9599609375,21483.8876953125,7999.97998046875],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;Sales - Monthly Trend&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;sales&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="foreCastChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales between 5000 and 15000&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;forecastQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;measure_value&quot;,&quot;name&quot;:&quot;sales&quot;,&quot;operator&quot;:&quot;between&quot;,&quot;resolutionValue&quot;:&quot;5000,15000&quot;,&quot;value&quot;:&quot;sales&quot;,&quot;displayName&quot;:&quot;Sales&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="foreCast-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ForeCastChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2015-01-01&quot;,&quot;2016-01-01&quot;,&quot;2017-01-01&quot;,&quot;2018-01-01&quot;,&quot;2019-01-01&quot;,&quot;2022-01-01&quot;],&quot;yAxis&quot;:[6354,41542,118855,32797,48927,119315],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;Sales - Yearly Trend (Forecast)&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;sales&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="ContributingFactor-Dimension-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;sales between 5000 and 15000&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;cfPrimaryDimensionQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;:  [{&quot;type&quot;:&quot;measure_value&quot;,&quot;name&quot;:&quot;sales&quot;,&quot;operator&quot;:&quot;between&quot;,&quot;resolutionValue&quot;:&quot;5000,15000&quot;,&quot;value&quot;:&quot;sales&quot;,&quot;displayName&quot;:&quot;Sales&quot;},{&quot;type&quot;:&quot;daterange&quot;,&quot;name&quot;:&quot;daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019-01-01,2019-12-31&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateMeasure&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="contributingFactorDimension-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ContributingFactor-Dimension-Assertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[{&quot;percentageDistribution&quot;:[]}],&quot;xAxis&quot;:[&quot;First Class&quot;,&quot;Standard Class&quot;,&quot;Same Day&quot;,&quot;Second Class&quot;],&quot;yAxis&quot;:[25199.927734375,10283.919921875,7999.97998046875,5443.9599609375],&quot;chartType&quot;:&quot;piechart&quot;,&quot;yAxisLabel&quot;:&quot;Sales&quot;,&quot;chartTitle&quot;:&quot;Sales By Ship Mode&quot;,&quot;xAxisLabel&quot;:&quot;Ship Mode&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.CloseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.CloseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.CloseWebSocketSampler" testname="WebSocket Close" enabled="false">
          <stringProp name="statusCode">1000</stringProp>
          <stringProp name="readTimeout">6000</stringProp>
        </eu.luminis.jmeter.wssampler.CloseWebSocketSampler>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="city in 2019" enabled="true"/>
      <hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="city in 2019-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server">3.6.188.62</stringProp>
          <stringProp name="port">8080</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;city in 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: null
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="city in 2019-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="entity Assertion" enabled="true">
            <stringProp name="JSON_PATH">.resp.entities</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;dimensions&quot;,&quot;name&quot;:&quot;dimensions&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;city&quot;,&quot;value&quot;:&quot;city&quot;},{&quot;name&quot;:&quot;measure&quot;,&quot;value&quot;:&quot;city_count&quot;,&quot;resolutionValue&quot;:&quot;city_count&quot;,&quot;exclude&quot;:false,&quot;contains&quot;:false,&quot;type&quot;:&quot;measure&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="metricCard Assetion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;City Count&quot;,&quot;value&quot;:300,&quot;type&quot;:&quot;Result&quot;,&quot;description&quot;:&quot;City has an unique count of 300 values&quot;},{&quot;name&quot;:&quot;Record Count&quot;,&quot;value&quot;:2544,&quot;type&quot;:&quot;Record Count&quot;,&quot;description&quot;:&quot;Result set is made up of 2544 rows, forming 16.1% of the entire data&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ChartAssetion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[{&quot;percentageDistribution&quot;:[&quot;8.6&quot;,&quot;6.6&quot;,&quot;5.8&quot;,&quot;5.8&quot;,&quot;5.7&quot;,&quot;3.9&quot;,&quot;3.2&quot;,&quot;2.6&quot;,&quot;1.9&quot;,&quot;1.6&quot;,&quot;1.6&quot;,&quot;1.1&quot;,&quot;0.9&quot;,&quot;0.9&quot;,&quot;0.8&quot;,&quot;0.8&quot;,&quot;0.8&quot;,&quot;0.8&quot;,&quot;0.7&quot;,&quot;0.7&quot;,&quot;0.7&quot;,&quot;0.6&quot;,&quot;0.6&quot;,&quot;0.6&quot;,&quot;0.6&quot;,&quot;0.6&quot;,&quot;0.6&quot;,&quot;0.6&quot;,&quot;0.6&quot;,&quot;0.6&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;]},{&quot;recordCount&quot;:[218,167,147,147,144,100,82,65,49,40,40,27,24,22,21,20,20,20,19,17,17,16,16,15,15,15,15,15,14,14,13,13,13,13,12,12,12,12,12,11,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}],&quot;xAxis&quot;:[&quot;New York City&quot;,&quot;Los Angeles&quot;,&quot;San Francisco&quot;,&quot;Seattle&quot;,&quot;Philadelphia&quot;,&quot;Chicago&quot;,&quot;Houston&quot;,&quot;Columbus&quot;,&quot;Dallas&quot;,&quot;Jacksonville&quot;,&quot;Springfield&quot;,&quot;Richmond&quot;,&quot;San Diego&quot;,&quot;Columbia&quot;,&quot;Lakewood&quot;,&quot;Aurora&quot;,&quot;Austin&quot;,&quot;Louisville&quot;,&quot;Phoenix&quot;,&quot;Cleveland&quot;,&quot;Detroit&quot;,&quot;Jackson&quot;,&quot;Westminster&quot;,&quot;Baltimore&quot;,&quot;Fairfield&quot;,&quot;Milwaukee&quot;,&quot;Newark&quot;,&quot;Rochester&quot;,&quot;Charlotte&quot;,&quot;Lancaster&quot;,&quot;Arlington&quot;,&quot;Fresno&quot;,&quot;Knoxville&quot;,&quot;Lafayette&quot;,&quot;Fayetteville&quot;,&quot;Indianapolis&quot;,&quot;Long Beach&quot;,&quot;Miami&quot;,&quot;Pasadena&quot;,&quot;San Jose&quot;,&quot;Atlanta&quot;,&quot;Burlington&quot;,&quot;Concord&quot;,&quot;Inglewood&quot;,&quot;Memphis&quot;,&quot;Nashville&quot;,&quot;Pembroke Pines&quot;,&quot;Salem&quot;,&quot;Sandy Springs&quot;,&quot;Akron&quot;,&quot;Bakersfield&quot;,&quot;Brentwood&quot;,&quot;Florence&quot;,&quot;Huntsville&quot;,&quot;Kent&quot;,&quot;Lawrence&quot;,&quot;Oakland&quot;,&quot;Wilmington&quot;,&quot;Albuquerque&quot;,&quot;Cranston&quot;,&quot;Decatur&quot;,&quot;Everett&quot;,&quot;Henderson&quot;,&quot;Marion&quot;,&quot;Tallahassee&quot;,&quot;Tucson&quot;,&quot;Apple Valley&quot;,&quot;Danville&quot;,&quot;Dublin&quot;,&quot;Portland&quot;,&quot;Provo&quot;,&quot;Quincy&quot;,&quot;Sioux Falls&quot;,&quot;Tampa&quot;,&quot;Toledo&quot;,&quot;Chester&quot;,&quot;Chico&quot;,&quot;Des Moines&quot;,&quot;Fort Collins&quot;,&quot;Fort Worth&quot;,&quot;Franklin&quot;,&quot;Gilbert&quot;,&quot;Mentor&quot;,&quot;Minneapolis&quot;,&quot;Monroe&quot;,&quot;Mount Vernon&quot;,&quot;Oklahoma City&quot;,&quot;Orlando&quot;,&quot;Santa Ana&quot;,&quot;Troy&quot;,&quot;Boynton Beach&quot;,&quot;Chattanooga&quot;,&quot;Cincinnati&quot;,&quot;Costa Mesa&quot;,&quot;Fargo&quot;,&quot;Glendale&quot;,&quot;Johnson City&quot;,&quot;Manchester&quot;,&quot;Mesa&quot;,&quot;Peoria&quot;,&quot;Providence&quot;,&quot;Raleigh&quot;,&quot;Roswell&quot;,&quot;San Antonio&quot;,&quot;Trenton&quot;,&quot;Waco&quot;,&quot;Waterbury&quot;,&quot;Wheeling&quot;,&quot;Auburn&quot;,&quot;Bedford&quot;,&quot;Belleville&quot;,&quot;Bryan&quot;,&quot;Clarksville&quot;,&quot;Clinton&quot;,&quot;El Paso&quot;,&quot;Great Falls&quot;,&quot;Greensboro&quot;,&quot;Hialeah&quot;,&quot;Hoover&quot;,&quot;Las Vegas&quot;,&quot;Lowell&quot;,&quot;Maple Grove&quot;,&quot;Meriden&quot;,&quot;Middletown&quot;,&quot;Muskogee&quot;,&quot;Newport News&quot;,&quot;Overland Park&quot;,&quot;Plainfield&quot;,&quot;Plano&quot;,&quot;Redmond&quot;,&quot;Skokie&quot;,&quot;Southaven&quot;,&quot;Tulsa&quot;,&quot;Tyler&quot;,&quot;Vineland&quot;,&quot;Virginia Beach&quot;,&quot;Anaheim&quot;,&quot;Bellingham&quot;,&quot;Carlsbad&quot;,&quot;Chandler&quot;,&quot;Coppell&quot;,&quot;Denver&quot;,&quot;Eagan&quot;,&quot;Edmonds&quot;,&quot;Freeport&quot;,&quot;Fremont&quot;,&quot;Greenwood&quot;,&quot;Hollywood&quot;,&quot;Lakeville&quot;,&quot;Little Rock&quot;,&quot;Lorain&quot;,&quot;Mcallen&quot;,&quot;Meridian&quot;,&quot;Milford&quot;,&quot;Modesto&quot;,&quot;Morristown&quot;,&quot;Murray&quot;,&quot;Pearland&quot;,&quot;Pocatello&quot;,&quot;Pompano Beach&quot;,&quot;Rome&quot;,&quot;Sacramento&quot;,&quot;Saint Cloud&quot;,&quot;Salt Lake City&quot;,&quot;Smyrna&quot;,&quot;Spokane&quot;,&quot;Suffolk&quot;,&quot;Thousand Oaks&quot;,&quot;Tigard&quot;,&quot;Warwick&quot;,&quot;Watertown&quot;,&quot;Bloomington&quot;,&quot;Cambridge&quot;,&quot;Carrollton&quot;,&quot;Clovis&quot;,&quot;Coachella&quot;,&quot;Coral Springs&quot;,&quot;Dearborn Heights&quot;,&quot;Draper&quot;,&quot;Durham&quot;,&quot;Elkhart&quot;,&quot;Farmington&quot;,&quot;Fort Lauderdale&quot;,&quot;Georgetown&quot;,&quot;Greeley&quot;,&quot;Greenville&quot;,&quot;Harlingen&quot;,&quot;Huntington Beach&quot;,&quot;Jonesboro&quot;,&quot;La Mesa&quot;,&quot;Lake Forest&quot;,&quot;Lakeland&quot;,&quot;Lansing&quot;,&quot;Laurel&quot;,&quot;Lawton&quot;,&quot;League City&quot;,&quot;Loveland&quot;,&quot;Lubbock&quot;,&quot;Mansfield&quot;,&quot;Mission Viejo&quot;,&quot;New Brunswick&quot;,&quot;New Rochelle&quot;,&quot;Oak Park&quot;,&quot;Oceanside&quot;,&quot;Olympia&quot;,&quot;Omaha&quot;,&quot;Orange&quot;,&quot;Parma&quot;,&quot;Pasco&quot;,&quot;Perth Amboy&quot;,&quot;Pine Bluff&quot;,&quot;Pomona&quot;,&quot;Rancho Cucamonga&quot;,&quot;Rockford&quot;,&quot;Roseville&quot;,&quot;Saint Charles&quot;,&quot;Saint Louis&quot;,&quot;Sanford&quot;,&quot;Santa Barbara&quot;,&quot;Tempe&quot;,&quot;Torrance&quot;,&quot;Washington&quot;,&quot;Westfield&quot;,&quot;Woodland&quot;,&quot;Woonsocket&quot;,&quot;Yonkers&quot;,&quot;York&quot;,&quot;Amarillo&quot;,&quot;Asheville&quot;,&quot;Beaumont&quot;,&quot;Boise&quot;,&quot;Bolingbrook&quot;,&quot;Brownsville&quot;,&quot;Camarillo&quot;,&quot;Cedar Hill&quot;,&quot;Chapel Hill&quot;,&quot;Citrus Heights&quot;,&quot;Commerce City&quot;,&quot;Corpus Christi&quot;,&quot;Cuyahoga Falls&quot;,&quot;Dearborn&quot;,&quot;Deltona&quot;,&quot;Des Plaines&quot;,&quot;Frisco&quot;,&quot;Garland&quot;,&quot;Grand Island&quot;,&quot;Grand Prairie&quot;,&quot;Green Bay&quot;,&quot;Gulfport&quot;,&quot;Harrisonburg&quot;,&quot;Helena&quot;,&quot;Hempstead&quot;,&quot;Hesperia&quot;,&quot;Hickory&quot;,&quot;Independence&quot;,&quot;Keller&quot;,&quot;Kenosha&quot;,&quot;Kissimmee&quot;,&quot;La Porte&quot;,&quot;Laguna Niguel&quot;,&quot;Lake Charles&quot;,&quot;Las Cruces&quot;,&quot;Lebanon&quot;,&quot;Lodi&quot;,&quot;Manteca&quot;,&quot;Melbourne&quot;,&quot;Mesquite&quot;,&quot;Miramar&quot;,&quot;Missouri City&quot;,&quot;Montgomery&quot;,&quot;Moorhead&quot;,&quot;Murfreesboro&quot;,&quot;Naperville&quot;,&quot;Nashua&quot;,&quot;New Bedford&quot;,&quot;Norwich&quot;,&quot;Orem&quot;,&quot;Ormond Beach&quot;,&quot;Palm Coast&quot;,&quot;Pharr&quot;,&quot;Pico Rivera&quot;,&quot;Port Saint Lucie&quot;,&quot;Reading&quot;,&quot;Riverside&quot;,&quot;Rochester Hills&quot;,&quot;Rogers&quot;,&quot;Round Rock&quot;,&quot;Saint Petersburg&quot;,&quot;Salinas&quot;,&quot;San Mateo&quot;,&quot;Scottsdale&quot;,&quot;Springdale&quot;,&quot;Sunnyvale&quot;,&quot;Texarkana&quot;,&quot;Tuscaloosa&quot;,&quot;Vancouver&quot;,&quot;Waterloo&quot;,&quot;Wichita&quot;,&quot;Woodstock&quot;,&quot;Yuma&quot;],&quot;yAxis&quot;:[218,167,147,147,144,100,82,65,49,40,40,27,24,22,21,20,20,20,19,17,17,16,16,15,15,15,15,15,14,14,13,13,13,13,12,12,12,12,12,11,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],&quot;chartType&quot;:&quot;bar&quot;,&quot;yAxisLabel&quot;:&quot;City Count&quot;,&quot;chartTitle&quot;:&quot;City In 2019&quot;,&quot;xAxisLabel&quot;:&quot;City&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsBasicQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsBasicQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;DataQuality&quot;,&quot;queryName&quot;:&quot;dataQualityQuery&quot;},{&quot;displayName&quot;:&quot;TrendLineChart&quot;,&quot;queryName&quot;:&quot;timeBreakQuery&quot;},{&quot;displayName&quot;:&quot;CentralTendency&quot;,&quot;queryName&quot;:&quot;centralTendencyQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsProQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsProQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;Forecast&quot;,&quot;queryName&quot;:&quot;forecastQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="dataQuality-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;city in 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;dataQualityQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;dimensions&quot;,&quot;name&quot;:&quot;dimensions&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;city&quot;,&quot;value&quot;:&quot;city&quot;},{&quot;name&quot;:&quot;measure&quot;,&quot;value&quot;:&quot;city_count&quot;,&quot;resolutionValue&quot;:&quot;city_count&quot;,&quot;exclude&quot;:false,&quot;contains&quot;:false,&quot;type&quot;:&quot;measure&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateDimension&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="dataQuality-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="DataQuality Assertion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;City - Zero Count&quot;,&quot;value&quot;:&quot;0&quot;,&quot;type&quot;:&quot;totalZeroCountQuery&quot;,&quot;description&quot;:&quot;Out of the 2544 values, 0 or 0% are zeroes and 2544 or 100% are non-zero.&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="trendLineChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;city in 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;timeBreakQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;dimensions&quot;,&quot;name&quot;:&quot;dimensions&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;city&quot;,&quot;value&quot;:&quot;city&quot;},{&quot;name&quot;:&quot;measure&quot;,&quot;value&quot;:&quot;city_count&quot;,&quot;resolutionValue&quot;:&quot;city_count&quot;,&quot;exclude&quot;:false,&quot;contains&quot;:false,&quot;type&quot;:&quot;measure&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateDimension&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="trendLineChart-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="TrendLineChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2019-01-01T00:00:00.000&quot;,&quot;2019-02-01T00:00:00.000&quot;,&quot;2019-03-01T00:00:00.000&quot;,&quot;2019-04-01T00:00:00.000&quot;,&quot;2019-05-01T00:00:00.000&quot;,&quot;2019-06-01T00:00:00.000&quot;,&quot;2019-07-01T00:00:00.000&quot;,&quot;2019-08-01T00:00:00.000&quot;,&quot;2019-09-01T00:00:00.000&quot;,&quot;2019-10-01T00:00:00.000&quot;,&quot;2019-11-01T00:00:00.000&quot;],&quot;yAxis&quot;:[132,118,225,197,243,243,222,226,452,295,191],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;City Count - Monthly Trend&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;city_count&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="foreCastChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;city in 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;forecastQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;dimensions&quot;,&quot;name&quot;:&quot;dimensions&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;city&quot;,&quot;value&quot;:&quot;city&quot;},{&quot;name&quot;:&quot;measure&quot;,&quot;value&quot;:&quot;city_count&quot;,&quot;resolutionValue&quot;:&quot;city_count&quot;,&quot;exclude&quot;:false,&quot;contains&quot;:false,&quot;type&quot;:&quot;measure&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateDimension&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="foreCast-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ForeCastChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2015-01-01&quot;,&quot;2016-01-01&quot;,&quot;2017-01-01&quot;,&quot;2018-01-01&quot;,&quot;2019-01-01&quot;,&quot;2022-01-01&quot;],&quot;yAxis&quot;:[2131,2578,6573,2024,2544,2397],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;City Count - Yearly Trend (Forecast)&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;city_count&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.CloseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.CloseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.CloseWebSocketSampler" testname="WebSocket Close" enabled="false">
          <stringProp name="statusCode">1000</stringProp>
          <stringProp name="readTimeout">6000</stringProp>
        </eu.luminis.jmeter.wssampler.CloseWebSocketSampler>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="city in 2018 and  2019" enabled="true"/>
      <hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="city in 2018 and  2019-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server">3.6.188.62</stringProp>
          <stringProp name="port">8080</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;city in 2018 and  2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: null
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="city in 2018 and  2019-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="entity Assertion" enabled="true">
            <stringProp name="JSON_PATH">.resp.entities</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2018-01-01,2018-12-31&quot;,&quot;value&quot;:&quot;2018&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;dimensions&quot;,&quot;name&quot;:&quot;dimensions&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;city&quot;,&quot;value&quot;:&quot;city&quot;},{&quot;name&quot;:&quot;measure&quot;,&quot;value&quot;:&quot;city_count&quot;,&quot;resolutionValue&quot;:&quot;city_count&quot;,&quot;exclude&quot;:false,&quot;contains&quot;:false,&quot;type&quot;:&quot;measure&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ChartAssetion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[{&quot;percentageDistribution&quot;:[&quot;8.1&quot;,&quot;7.2&quot;,&quot;6.0&quot;,&quot;5.5&quot;,&quot;5.0&quot;,&quot;3.7&quot;,&quot;3.5&quot;,&quot;2.6&quot;,&quot;1.8&quot;,&quot;1.5&quot;,&quot;1.4&quot;,&quot;1.3&quot;,&quot;1.1&quot;,&quot;0.9&quot;,&quot;0.8&quot;,&quot;0.7&quot;,&quot;0.7&quot;,&quot;0.7&quot;,&quot;0.6&quot;,&quot;0.6&quot;,&quot;0.6&quot;,&quot;0.6&quot;,&quot;0.6&quot;,&quot;0.6&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.1&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;0.0&quot;]},{&quot;recordCount&quot;:[368,327,273,249,227,167,161,118,83,69,66,61,52,43,38,33,32,31,29,29,29,27,26,26,25,25,24,22,22,21,21,21,21,21,21,21,19,19,19,19,19,19,18,18,17,17,16,16,16,15,15,15,15,14,14,14,14,13,13,13,13,13,13,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}],&quot;xAxis&quot;:[&quot;New York City&quot;,&quot;Los Angeles&quot;,&quot;San Francisco&quot;,&quot;Philadelphia&quot;,&quot;Seattle&quot;,&quot;Chicago&quot;,&quot;Houston&quot;,&quot;Columbus&quot;,&quot;Dallas&quot;,&quot;Springfield&quot;,&quot;San Diego&quot;,&quot;Jacksonville&quot;,&quot;Richmond&quot;,&quot;Columbia&quot;,&quot;Louisville&quot;,&quot;Newark&quot;,&quot;Jackson&quot;,&quot;Lakewood&quot;,&quot;Detroit&quot;,&quot;Fairfield&quot;,&quot;Miami&quot;,&quot;Phoenix&quot;,&quot;Aurora&quot;,&quot;Charlotte&quot;,&quot;Arlington&quot;,&quot;Long Beach&quot;,&quot;San Antonio&quot;,&quot;Fresno&quot;,&quot;Tampa&quot;,&quot;Austin&quot;,&quot;Baltimore&quot;,&quot;Henderson&quot;,&quot;Huntsville&quot;,&quot;Lancaster&quot;,&quot;Salem&quot;,&quot;Tucson&quot;,&quot;Cleveland&quot;,&quot;Decatur&quot;,&quot;Fayetteville&quot;,&quot;Knoxville&quot;,&quot;Rochester&quot;,&quot;San Jose&quot;,&quot;Concord&quot;,&quot;Lafayette&quot;,&quot;Lawrence&quot;,&quot;Wilmington&quot;,&quot;Milwaukee&quot;,&quot;Pasadena&quot;,&quot;Westminster&quot;,&quot;Cranston&quot;,&quot;Denver&quot;,&quot;El Paso&quot;,&quot;Indianapolis&quot;,&quot;Albuquerque&quot;,&quot;Atlanta&quot;,&quot;Nashville&quot;,&quot;Peoria&quot;,&quot;Alexandria&quot;,&quot;Lakeville&quot;,&quot;Memphis&quot;,&quot;Minneapolis&quot;,&quot;Oakland&quot;,&quot;Tulsa&quot;,&quot;Akron&quot;,&quot;Brentwood&quot;,&quot;Burlington&quot;,&quot;Florence&quot;,&quot;Fort Worth&quot;,&quot;Kent&quot;,&quot;Plano&quot;,&quot;Sandy Springs&quot;,&quot;Des Moines&quot;,&quot;Edmonds&quot;,&quot;Everett&quot;,&quot;Lowell&quot;,&quot;Marion&quot;,&quot;Portland&quot;,&quot;Virginia Beach&quot;,&quot;Chesapeake&quot;,&quot;Glendale&quot;,&quot;Inglewood&quot;,&quot;Lakeland&quot;,&quot;Midland&quot;,&quot;Pembroke Pines&quot;,&quot;Tempe&quot;,&quot;Toledo&quot;,&quot;Trenton&quot;,&quot;Bakersfield&quot;,&quot;Chester&quot;,&quot;Fargo&quot;,&quot;Hialeah&quot;,&quot;Jonesboro&quot;,&quot;Little Rock&quot;,&quot;Monroe&quot;,&quot;Roswell&quot;,&quot;Sioux Falls&quot;,&quot;Westland&quot;,&quot;Yonkers&quot;,&quot;Apple Valley&quot;,&quot;Bloomington&quot;,&quot;Clinton&quot;,&quot;Corpus Christi&quot;,&quot;Franklin&quot;,&quot;Gilbert&quot;,&quot;Great Falls&quot;,&quot;Johnson City&quot;,&quot;Meriden&quot;,&quot;Mount Vernon&quot;,&quot;North Las Vegas&quot;,&quot;Omaha&quot;,&quot;Provo&quot;,&quot;Raleigh&quot;,&quot;Tallahassee&quot;,&quot;Troy&quot;,&quot;Bristol&quot;,&quot;Cincinnati&quot;,&quot;Danville&quot;,&quot;Dover&quot;,&quot;Dublin&quot;,&quot;New Rochelle&quot;,&quot;Newport News&quot;,&quot;Oklahoma City&quot;,&quot;Orlando&quot;,&quot;Quincy&quot;,&quot;Saint Petersburg&quot;,&quot;Skokie&quot;,&quot;Southaven&quot;,&quot;Bossier City&quot;,&quot;Boynton Beach&quot;,&quot;Brownsville&quot;,&quot;Chico&quot;,&quot;Dearborn Heights&quot;,&quot;Des Plaines&quot;,&quot;Fort Collins&quot;,&quot;Greensboro&quot;,&quot;Hackensack&quot;,&quot;Harrisonburg&quot;,&quot;Hollywood&quot;,&quot;League City&quot;,&quot;Mentor&quot;,&quot;Mesa&quot;,&quot;Pasco&quot;,&quot;Plainfield&quot;,&quot;Pleasant Grove&quot;,&quot;Santa Ana&quot;,&quot;Scottsdale&quot;,&quot;Tigard&quot;,&quot;Watertown&quot;,&quot;Anaheim&quot;,&quot;Beaumont&quot;,&quot;Cary&quot;,&quot;Chandler&quot;,&quot;Chattanooga&quot;,&quot;Clarksville&quot;,&quot;Colorado Springs&quot;,&quot;Costa Mesa&quot;,&quot;Freeport&quot;,&quot;Huntington Beach&quot;,&quot;Las Vegas&quot;,&quot;Logan&quot;,&quot;Manchester&quot;,&quot;Mesquite&quot;,&quot;Middletown&quot;,&quot;Montgomery&quot;,&quot;Moreno Valley&quot;,&quot;Providence&quot;,&quot;Redondo Beach&quot;,&quot;Riverside&quot;,&quot;Round Rock&quot;,&quot;Sacramento&quot;,&quot;Tyler&quot;,&quot;Utica&quot;,&quot;Waco&quot;,&quot;Waterbury&quot;,&quot;Wheeling&quot;,&quot;Athens&quot;,&quot;Auburn&quot;,&quot;Bedford&quot;,&quot;Belleville&quot;,&quot;Bryan&quot;,&quot;Buffalo&quot;,&quot;Carrollton&quot;,&quot;Deltona&quot;,&quot;Durham&quot;,&quot;Fort Lauderdale&quot;,&quot;Hampton&quot;,&quot;Hempstead&quot;,&quot;Hoover&quot;,&quot;Lawton&quot;,&quot;Lorain&quot;,&quot;Loveland&quot;,&quot;Macon&quot;,&quot;Maple Grove&quot;,&quot;Murray&quot;,&quot;Muskogee&quot;,&quot;Naperville&quot;,&quot;Oceanside&quot;,&quot;Olathe&quot;,&quot;Olympia&quot;,&quot;Orange&quot;,&quot;Overland Park&quot;,&quot;Palm Coast&quot;,&quot;Parma&quot;,&quot;Pomona&quot;,&quot;Redmond&quot;,&quot;Saint Louis&quot;,&quot;Salt Lake City&quot;,&quot;San Marcos&quot;,&quot;Smyrna&quot;,&quot;Vallejo&quot;,&quot;Vineland&quot;,&quot;Wausau&quot;,&quot;Woodstock&quot;,&quot;Apopka&quot;,&quot;Asheville&quot;,&quot;Avondale&quot;,&quot;Bangor&quot;,&quot;Bellingham&quot;,&quot;Burbank&quot;,&quot;Caldwell&quot;,&quot;Carlsbad&quot;,&quot;Coppell&quot;,&quot;Draper&quot;,&quot;Eagan&quot;,&quot;Fremont&quot;,&quot;Grand Prairie&quot;,&quot;Grand Rapids&quot;,&quot;Greenville&quot;,&quot;Greenwood&quot;,&quot;Hamilton&quot;,&quot;Lake Charles&quot;,&quot;Lubbock&quot;,&quot;Madison&quot;,&quot;Manteca&quot;,&quot;Mason&quot;,&quot;Mcallen&quot;,&quot;Medina&quot;,&quot;Meridian&quot;,&quot;Milford&quot;,&quot;Mission Viejo&quot;,&quot;Modesto&quot;,&quot;Morristown&quot;,&quot;Odessa&quot;,&quot;Orem&quot;,&quot;Oswego&quot;,&quot;Pearland&quot;,&quot;Pocatello&quot;,&quot;Pompano Beach&quot;,&quot;Rancho Cucamonga&quot;,&quot;Reading&quot;,&quot;Rome&quot;,&quot;Roseville&quot;,&quot;Saint Charles&quot;,&quot;Saint Cloud&quot;,&quot;San Gabriel&quot;,&quot;Santa Clara&quot;,&quot;Spokane&quot;,&quot;Suffolk&quot;,&quot;Thousand Oaks&quot;,&quot;Warwick&quot;,&quot;Waynesboro&quot;,&quot;Woonsocket&quot;,&quot;Bolingbrook&quot;,&quot;Buffalo Grove&quot;,&quot;Cambridge&quot;,&quot;Cedar Hill&quot;,&quot;Clifton&quot;,&quot;Clovis&quot;,&quot;Coachella&quot;,&quot;Coon Rapids&quot;,&quot;Coral Springs&quot;,&quot;Elkhart&quot;,&quot;Elmhurst&quot;,&quot;Escondido&quot;,&quot;Farmington&quot;,&quot;Garland&quot;,&quot;Georgetown&quot;,&quot;Greeley&quot;,&quot;Green Bay&quot;,&quot;Gresham&quot;,&quot;Harlingen&quot;,&quot;Jamestown&quot;,&quot;La Mesa&quot;,&quot;Lake Forest&quot;,&quot;Lansing&quot;,&quot;Laredo&quot;,&quot;Laurel&quot;,&quot;Lodi&quot;,&quot;Mansfield&quot;,&quot;Marietta&quot;,&quot;Medford&quot;,&quot;Moorhead&quot;,&quot;New Brunswick&quot;,&quot;Oak Park&quot;,&quot;Perth Amboy&quot;,&quot;Pine Bluff&quot;,&quot;Pueblo&quot;,&quot;Rapid City&quot;,&quot;Reno&quot;,&quot;Revere&quot;,&quot;Rockford&quot;,&quot;Sanford&quot;,&quot;Santa Barbara&quot;,&quot;Texarkana&quot;,&quot;Torrance&quot;,&quot;Washington&quot;,&quot;Westfield&quot;,&quot;Woodland&quot;,&quot;York&quot;,&quot;Amarillo&quot;,&quot;Appleton&quot;,&quot;Bellevue&quot;,&quot;Billings&quot;,&quot;Boca Raton&quot;,&quot;Boise&quot;,&quot;Bowling Green&quot;,&quot;Camarillo&quot;,&quot;Chapel Hill&quot;,&quot;Chula Vista&quot;,&quot;Citrus Heights&quot;,&quot;Commerce City&quot;,&quot;Cuyahoga Falls&quot;,&quot;Dearborn&quot;,&quot;Delray Beach&quot;,&quot;Eau Claire&quot;,&quot;El Cajon&quot;,&quot;Evanston&quot;,&quot;Frisco&quot;,&quot;Garden City&quot;,&quot;Grand Island&quot;,&quot;Gulfport&quot;,&quot;Helena&quot;,&quot;Hesperia&quot;,&quot;Hickory&quot;,&quot;Independence&quot;,&quot;Irving&quot;,&quot;Keller&quot;,&quot;Kenosha&quot;,&quot;Kissimmee&quot;,&quot;La Porte&quot;,&quot;Laguna Niguel&quot;,&quot;Las Cruces&quot;,&quot;Lebanon&quot;,&quot;Lewiston&quot;,&quot;Linden&quot;,&quot;Manhattan&quot;,&quot;Margate&quot;,&quot;Melbourne&quot;,&quot;Miramar&quot;,&quot;Mishawaka&quot;,&quot;Missouri City&quot;,&quot;Mobile&quot;,&quot;Mount Pleasant&quot;,&quot;Murfreesboro&quot;,&quot;Nashua&quot;,&quot;New Bedford&quot;,&quot;Niagara Falls&quot;,&quot;North Miami&quot;,&quot;Norwich&quot;,&quot;Ormond Beach&quot;,&quot;Owensboro&quot;,&quot;Oxnard&quot;,&quot;Pharr&quot;,&quot;Pico Rivera&quot;,&quot;Port Arthur&quot;,&quot;Port Saint Lucie&quot;,&quot;Portage&quot;,&quot;Redding&quot;,&quot;Rochester Hills&quot;,&quot;Rock Hill&quot;,&quot;Rogers&quot;,&quot;Romeoville&quot;,&quot;Royal Oak&quot;,&quot;Salinas&quot;,&quot;San Mateo&quot;,&quot;Santa Fe&quot;,&quot;Springdale&quot;,&quot;Sunnyvale&quot;,&quot;Texas City&quot;,&quot;Thornton&quot;,&quot;Tuscaloosa&quot;,&quot;Vacaville&quot;,&quot;Vancouver&quot;,&quot;Waterloo&quot;,&quot;West Jordan&quot;,&quot;Wichita&quot;,&quot;Yuma&quot;],&quot;yAxis&quot;:[368,327,273,249,227,167,161,118,83,69,66,61,52,43,38,33,32,31,29,29,29,27,26,26,25,25,24,22,22,21,21,21,21,21,21,21,19,19,19,19,19,19,18,18,17,17,16,16,16,15,15,15,15,14,14,14,14,13,13,13,13,13,13,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],&quot;chartType&quot;:&quot;bar&quot;,&quot;yAxisLabel&quot;:&quot;City Count&quot;,&quot;chartTitle&quot;:&quot;City In 2018 And  2019&quot;,&quot;xAxisLabel&quot;:&quot;City&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="metricCard Assetion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;City Count&quot;,&quot;value&quot;:387,&quot;type&quot;:&quot;Result&quot;,&quot;description&quot;:&quot;City has an unique count of 387 values&quot;},{&quot;name&quot;:&quot;Record Count&quot;,&quot;value&quot;:4568,&quot;type&quot;:&quot;Record Count&quot;,&quot;description&quot;:&quot;Result set is made up of 4568 rows, forming 28.8% of the entire data&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsBasicQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsBasicQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;DataQuality&quot;,&quot;queryName&quot;:&quot;dataQualityQuery&quot;},{&quot;displayName&quot;:&quot;TrendLineChart&quot;,&quot;queryName&quot;:&quot;timeBreakQuery&quot;},{&quot;displayName&quot;:&quot;CentralTendency&quot;,&quot;queryName&quot;:&quot;centralTendencyQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsProQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsProQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;Forecast&quot;,&quot;queryName&quot;:&quot;forecastQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="dataQuality-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;city in 2018 and  2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;dataQualityQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2018-01-01,2018-12-31&quot;,&quot;value&quot;:&quot;2018&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;dimensions&quot;,&quot;name&quot;:&quot;dimensions&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;city&quot;,&quot;value&quot;:&quot;city&quot;},{&quot;name&quot;:&quot;measure&quot;,&quot;value&quot;:&quot;city_count&quot;,&quot;resolutionValue&quot;:&quot;city_count&quot;,&quot;exclude&quot;:false,&quot;contains&quot;:false,&quot;type&quot;:&quot;measure&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateDimension&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="dataQuality-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="DataQuality Assertion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;City - Zero Count&quot;,&quot;value&quot;:&quot;0&quot;,&quot;type&quot;:&quot;totalZeroCountQuery&quot;,&quot;description&quot;:&quot;Out of the 4568 values, 0 or 0% are zeroes and 4568 or 100% are non-zero.&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="trendLineChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;city in 2018 and  2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;timeBreakQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2018-01-01,2018-12-31&quot;,&quot;value&quot;:&quot;2018&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;dimensions&quot;,&quot;name&quot;:&quot;dimensions&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;city&quot;,&quot;value&quot;:&quot;city&quot;},{&quot;name&quot;:&quot;measure&quot;,&quot;value&quot;:&quot;city_count&quot;,&quot;resolutionValue&quot;:&quot;city_count&quot;,&quot;exclude&quot;:false,&quot;contains&quot;:false,&quot;type&quot;:&quot;measure&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateDimension&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="trendLineChart-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="TrendLineChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2018-01-01T00:00:00.000&quot;,&quot;2019-01-01T00:00:00.000&quot;],&quot;yAxis&quot;:[2024,2544],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;City Count - Yearly Trend&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;city_count&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="foreCastChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;city in 2018 and  2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;forecastQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;:[{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2018-01-01,2018-12-31&quot;,&quot;value&quot;:&quot;2018&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;dimensions&quot;,&quot;name&quot;:&quot;dimensions&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;city&quot;,&quot;value&quot;:&quot;city&quot;},{&quot;name&quot;:&quot;measure&quot;,&quot;value&quot;:&quot;city_count&quot;,&quot;resolutionValue&quot;:&quot;city_count&quot;,&quot;exclude&quot;:false,&quot;contains&quot;:false,&quot;type&quot;:&quot;measure&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateDimension&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="foreCast-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ForeCastChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2015-01-01&quot;,&quot;2016-01-01&quot;,&quot;2017-01-01&quot;,&quot;2018-01-01&quot;,&quot;2019-01-01&quot;,&quot;2022-01-01&quot;],&quot;yAxis&quot;:[2131,2578,6573,2024,2544,2397],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;City Count - Yearly Trend (Forecast)&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;city_count&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.CloseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.CloseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.CloseWebSocketSampler" testname="WebSocket Close" enabled="false">
          <stringProp name="statusCode">1000</stringProp>
          <stringProp name="readTimeout">6000</stringProp>
        </eu.luminis.jmeter.wssampler.CloseWebSocketSampler>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="number of state in 2019" enabled="true"/>
      <hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="number of state in 2019-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server">3.6.188.62</stringProp>
          <stringProp name="port">8080</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;number of state in 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: null
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="number of state in 2019-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="entity Assertion" enabled="true">
            <stringProp name="JSON_PATH">.resp.entities</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;dimensions&quot;,&quot;name&quot;:&quot;dimensions&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;state&quot;,&quot;value&quot;:&quot;state&quot;},{&quot;name&quot;:&quot;measure&quot;,&quot;value&quot;:&quot;state_count&quot;,&quot;resolutionValue&quot;:&quot;state_count&quot;,&quot;exclude&quot;:false,&quot;contains&quot;:false,&quot;type&quot;:&quot;measure&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="metricCard Assetion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;State Count&quot;,&quot;value&quot;:47,&quot;type&quot;:&quot;Result&quot;,&quot;description&quot;:&quot;State has an unique count of 47 values&quot;},{&quot;name&quot;:&quot;Record Count&quot;,&quot;value&quot;:2544,&quot;type&quot;:&quot;Record Count&quot;,&quot;description&quot;:&quot;Result set is made up of 2544 rows, forming 16.1% of the entire data&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ChartAssetion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[{&quot;percentageDistribution&quot;:[&quot;20.4&quot;,&quot;9.8&quot;,&quot;9.5&quot;,&quot;6.6&quot;,&quot;6.1&quot;,&quot;5.5&quot;,&quot;4.7&quot;,&quot;4.0&quot;,&quot;2.7&quot;,&quot;2.5&quot;,&quot;2.3&quot;,&quot;2.2&quot;,&quot;1.8&quot;,&quot;1.7&quot;,&quot;1.4&quot;,&quot;1.4&quot;,&quot;1.3&quot;,&quot;1.3&quot;,&quot;1.2&quot;,&quot;1.2&quot;,&quot;1.1&quot;,&quot;1.1&quot;,&quot;1.1&quot;,&quot;0.9&quot;,&quot;0.7&quot;,&quot;0.7&quot;,&quot;0.7&quot;,&quot;0.6&quot;,&quot;0.6&quot;,&quot;0.6&quot;,&quot;0.5&quot;,&quot;0.5&quot;,&quot;0.4&quot;,&quot;0.4&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.3&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.2&quot;,&quot;0.1&quot;]},{&quot;recordCount&quot;:[518,250,242,169,156,140,120,101,68,63,58,55,46,43,35,35,33,32,31,30,28,28,27,23,18,18,17,16,16,15,12,12,11,10,7,7,7,7,6,5,5,5,5,4,4,4,2]}],&quot;xAxis&quot;:[&quot;California&quot;,&quot;New York&quot;,&quot;Texas&quot;,&quot;Washington&quot;,&quot;Pennsylvania&quot;,&quot;Illinois&quot;,&quot;Ohio&quot;,&quot;Florida&quot;,&quot;North Carolina&quot;,&quot;Tennessee&quot;,&quot;Georgia&quot;,&quot;Arizona&quot;,&quot;Indiana&quot;,&quot;Michigan&quot;,&quot;Colorado&quot;,&quot;Virginia&quot;,&quot;Maryland&quot;,&quot;New Jersey&quot;,&quot;Minnesota&quot;,&quot;Kentucky&quot;,&quot;Connecticut&quot;,&quot;Oregon&quot;,&quot;Massachusetts&quot;,&quot;Missouri&quot;,&quot;Rhode Island&quot;,&quot;Wisconsin&quot;,&quot;Delaware&quot;,&quot;New Mexico&quot;,&quot;Oklahoma&quot;,&quot;Utah&quot;,&quot;Arkansas&quot;,&quot;Iowa&quot;,&quot;Louisiana&quot;,&quot;Alabama&quot;,&quot;Idaho&quot;,&quot;Mississippi&quot;,&quot;New Hampshire&quot;,&quot;South Dakota&quot;,&quot;Nebraska&quot;,&quot;Kansas&quot;,&quot;Montana&quot;,&quot;Nevada&quot;,&quot;North Dakota&quot;,&quot;South Carolina&quot;,&quot;Vermont&quot;,&quot;West Virginia&quot;,&quot;District Of Columbia&quot;],&quot;yAxis&quot;:[518,250,242,169,156,140,120,101,68,63,58,55,46,43,35,35,33,32,31,30,28,28,27,23,18,18,17,16,16,15,12,12,11,10,7,7,7,7,6,5,5,5,5,4,4,4,2],&quot;chartType&quot;:&quot;bar&quot;,&quot;yAxisLabel&quot;:&quot;State Count&quot;,&quot;chartTitle&quot;:&quot;Number Of State In 2019&quot;,&quot;xAxisLabel&quot;:&quot;State&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsBasicQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsBasicQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;DataQuality&quot;,&quot;queryName&quot;:&quot;dataQualityQuery&quot;},{&quot;displayName&quot;:&quot;TrendLineChart&quot;,&quot;queryName&quot;:&quot;timeBreakQuery&quot;},{&quot;displayName&quot;:&quot;CentralTendency&quot;,&quot;queryName&quot;:&quot;centralTendencyQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsProQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsProQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;Forecast&quot;,&quot;queryName&quot;:&quot;forecastQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="dataQuality-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;number of state in 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;dataQualityQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;:[{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;dimensions&quot;,&quot;name&quot;:&quot;dimensions&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;state&quot;,&quot;value&quot;:&quot;state&quot;},{&quot;name&quot;:&quot;measure&quot;,&quot;value&quot;:&quot;state_count&quot;,&quot;resolutionValue&quot;:&quot;state_count&quot;,&quot;exclude&quot;:false,&quot;contains&quot;:false,&quot;type&quot;:&quot;measure&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateDimension&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="dataQuality-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="DataQuality Assertion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;State - Zero Count&quot;,&quot;value&quot;:&quot;0&quot;,&quot;type&quot;:&quot;totalZeroCountQuery&quot;,&quot;description&quot;:&quot;Out of the 2544 values, 0 or 0% are zeroes and 2544 or 100% are non-zero.&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="trendLineChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;number of state in 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;timeBreakQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;dimensions&quot;,&quot;name&quot;:&quot;dimensions&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;state&quot;,&quot;value&quot;:&quot;state&quot;},{&quot;name&quot;:&quot;measure&quot;,&quot;value&quot;:&quot;state_count&quot;,&quot;resolutionValue&quot;:&quot;state_count&quot;,&quot;exclude&quot;:false,&quot;contains&quot;:false,&quot;type&quot;:&quot;measure&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateDimension&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="trendLineChart-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="TrendLineChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2019-01-01T00:00:00.000&quot;,&quot;2019-02-01T00:00:00.000&quot;,&quot;2019-03-01T00:00:00.000&quot;,&quot;2019-04-01T00:00:00.000&quot;,&quot;2019-05-01T00:00:00.000&quot;,&quot;2019-06-01T00:00:00.000&quot;,&quot;2019-07-01T00:00:00.000&quot;,&quot;2019-08-01T00:00:00.000&quot;,&quot;2019-09-01T00:00:00.000&quot;,&quot;2019-10-01T00:00:00.000&quot;,&quot;2019-11-01T00:00:00.000&quot;],&quot;yAxis&quot;:[132,118,225,197,243,243,222,226,452,295,191],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;State Count - Monthly Trend&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;state_count&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="foreCastChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;number of state in 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;forecastQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;:[{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;dimensions&quot;,&quot;name&quot;:&quot;dimensions&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;state&quot;,&quot;value&quot;:&quot;state&quot;},{&quot;name&quot;:&quot;measure&quot;,&quot;value&quot;:&quot;state_count&quot;,&quot;resolutionValue&quot;:&quot;state_count&quot;,&quot;exclude&quot;:false,&quot;contains&quot;:false,&quot;type&quot;:&quot;measure&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateDimension&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="foreCast-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ForeCastChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2015-01-01&quot;,&quot;2016-01-01&quot;,&quot;2017-01-01&quot;,&quot;2018-01-01&quot;,&quot;2019-01-01&quot;,&quot;2022-01-01&quot;],&quot;yAxis&quot;:[2131,2578,6573,2024,2544,2397],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;State Count - Yearly Trend (Forecast)&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;state_count&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.CloseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.CloseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.CloseWebSocketSampler" testname="WebSocket Close" enabled="false">
          <stringProp name="statusCode">1000</stringProp>
          <stringProp name="readTimeout">6000</stringProp>
        </eu.luminis.jmeter.wssampler.CloseWebSocketSampler>
        <hashTree/>
      </hashTree>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="ship mode in 2018 and 2019" enabled="true"/>
      <hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="ship mode in 2018 and 2019-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server">3.6.188.62</stringProp>
          <stringProp name="port">8080</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;ship mode in 2018 and 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: null
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="ship mode in 2018 and 2019-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="entity Assertion" enabled="true">
            <stringProp name="JSON_PATH">.resp.entities</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2018-01-01,2018-12-31&quot;,&quot;value&quot;:&quot;2018&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;dimensions&quot;,&quot;name&quot;:&quot;dimensions&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;ship_mode&quot;,&quot;value&quot;:&quot;ship mode&quot;},{&quot;name&quot;:&quot;measure&quot;,&quot;value&quot;:&quot;ship mode_count&quot;,&quot;resolutionValue&quot;:&quot;ship_mode_count&quot;,&quot;exclude&quot;:false,&quot;contains&quot;:false,&quot;type&quot;:&quot;measure&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="metricCard Assetion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;Ship Mode Count&quot;,&quot;value&quot;:4,&quot;type&quot;:&quot;Result&quot;,&quot;description&quot;:&quot;Ship Mode has an unique count of 4 values&quot;},{&quot;name&quot;:&quot;Record Count&quot;,&quot;value&quot;:4568,&quot;type&quot;:&quot;Record Count&quot;,&quot;description&quot;:&quot;Result set is made up of 4568 rows, forming 28.8% of the entire data&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ChartAssetion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[{&quot;percentageDistribution&quot;:[&quot;59.4&quot;,&quot;19.3&quot;,&quot;16.3&quot;,&quot;5.0&quot;]},{&quot;recordCount&quot;:[2712,883,743,230]}],&quot;xAxis&quot;:[&quot;Standard Class&quot;,&quot;Second Class&quot;,&quot;First Class&quot;,&quot;Same Day&quot;],&quot;yAxis&quot;:[2712,883,743,230],&quot;chartType&quot;:&quot;piechart&quot;,&quot;yAxisLabel&quot;:&quot;Ship Mode Count&quot;,&quot;chartTitle&quot;:&quot;Ship Mode In 2018 And 2019&quot;,&quot;xAxisLabel&quot;:&quot;Ship Mode&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsBasicQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsBasicQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;DataQuality&quot;,&quot;queryName&quot;:&quot;dataQualityQuery&quot;},{&quot;displayName&quot;:&quot;TrendLineChart&quot;,&quot;queryName&quot;:&quot;timeBreakQuery&quot;},{&quot;displayName&quot;:&quot;CentralTendency&quot;,&quot;queryName&quot;:&quot;centralTendencyQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="insightsProQueriesAssertion" enabled="true">
            <stringProp name="JSON_PATH">.insightsProQueries</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;displayName&quot;:&quot;Forecast&quot;,&quot;queryName&quot;:&quot;forecastQuery&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="dataQuality-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;ship mode in 2018 and 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;dataQualityQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;: [{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2018-01-01,2018-12-31&quot;,&quot;value&quot;:&quot;2018&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;dimensions&quot;,&quot;name&quot;:&quot;dimensions&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;ship_mode&quot;,&quot;value&quot;:&quot;ship mode&quot;},{&quot;name&quot;:&quot;measure&quot;,&quot;value&quot;:&quot;ship mode_count&quot;,&quot;resolutionValue&quot;:&quot;ship_mode_count&quot;,&quot;exclude&quot;:false,&quot;contains&quot;:false,&quot;type&quot;:&quot;measure&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateDimension&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="dataQuality-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="DataQuality Assertion" enabled="true">
            <stringProp name="JSON_PATH">.metricCardData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;name&quot;:&quot;Ship Mode - Zero Count&quot;,&quot;value&quot;:&quot;0&quot;,&quot;type&quot;:&quot;totalZeroCountQuery&quot;,&quot;description&quot;:&quot;Out of the 4568 values, 0 or 0% are zeroes and 4568 or 100% are non-zero.&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="trendLineChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;ship mode in 2018 and 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;timeBreakQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;:[{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2018-01-01,2018-12-31&quot;,&quot;value&quot;:&quot;2018&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;dimensions&quot;,&quot;name&quot;:&quot;dimensions&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;ship_mode&quot;,&quot;value&quot;:&quot;ship mode&quot;},{&quot;name&quot;:&quot;measure&quot;,&quot;value&quot;:&quot;ship mode_count&quot;,&quot;resolutionValue&quot;:&quot;ship_mode_count&quot;,&quot;exclude&quot;:false,&quot;contains&quot;:false,&quot;type&quot;:&quot;measure&quot;}],
    &quot;pageNumberChange&quot;: false,
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateDimension&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="trendLineChart-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="TrendLineChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2018-01-01T00:00:00.000&quot;,&quot;2019-01-01T00:00:00.000&quot;],&quot;yAxis&quot;:[2024,2544],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;Ship Mode Count - Yearly Trend&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;ship_mode_count&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler" testname="foreCastChart-write" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <boolProp name="binaryPayload">false</boolProp>
          <stringProp name="requestData">{
  &quot;type&quot;: &quot;normal&quot;,
  &quot;text&quot;: &quot;ship mode in 2018 and 2019&quot;,
  &quot;from&quot;: {
    &quot;id&quot;: &quot;d0a5682f-8e6d-4c5e-8f48-a123a2c838e1&quot;,
    &quot;name&quot;: &quot;${NAME}&quot;,
    &quot;channelId&quot;: &quot;${CHANNEL_ID}&quot;
  },
  &quot;metadata&quot;: {
    &quot;requestType&quot;: &quot;forecastQuery&quot;,
    &quot;duplicateEntityValue&quot;: &quot;&quot;,
    &quot;choiceSelected&quot;: &quot;&quot;,
    &quot;responseType&quot;: &quot;&quot;,
    &quot;ignoreNLU&quot;: false,
    &quot;pageSize&quot;: 30,
    &quot;pageNumber&quot;: 1,
    &quot;filters&quot;: [],
    &quot;choices&quot;: [],
    &quot;entities&quot;:[{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2018-01-01,2018-12-31&quot;,&quot;value&quot;:&quot;2018&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;name&quot;:&quot;builtin.datetimeV2.daterange&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;2019-01-01,2019-12-31&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;displayName&quot;:&quot;Ship Date&quot;},{&quot;type&quot;:&quot;dimensions&quot;,&quot;name&quot;:&quot;dimensions&quot;,&quot;operator&quot;:&quot;&quot;,&quot;resolutionValue&quot;:&quot;ship_mode&quot;,&quot;value&quot;:&quot;ship mode&quot;},{&quot;name&quot;:&quot;measure&quot;,&quot;value&quot;:&quot;ship mode_count&quot;,&quot;resolutionValue&quot;:&quot;ship_mode_count&quot;,&quot;exclude&quot;:false,&quot;contains&quot;:false,&quot;type&quot;:&quot;measure&quot;}],
    &quot;freeText&quot;: false,
    &quot;queryCategory&quot;: &quot;aggregateDimension&quot;
  },
  &quot;spellCheck&quot;: true,
  &quot;locale&quot;: &quot;${LOCALE}&quot;,
  &quot;appName&quot;: &quot;${APP_NAME}&quot;
}</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <boolProp name="loadDataFromFile">false</boolProp>
          <stringProp name="dataFile"></stringProp>
        </eu.luminis.jmeter.wssampler.SingleWriteWebSocketSampler>
        <hashTree/>
        <eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler" testname="foreCast-read" enabled="true">
          <boolProp name="TLS">false</boolProp>
          <stringProp name="server"></stringProp>
          <stringProp name="port">80</stringProp>
          <stringProp name="path"></stringProp>
          <stringProp name="connectTimeout">20000</stringProp>
          <stringProp name="dataType">Text</stringProp>
          <boolProp name="createNewConnection">false</boolProp>
          <stringProp name="readTimeout">6000</stringProp>
          <boolProp name="optional">false</boolProp>
        </eu.luminis.jmeter.wssampler.SingleReadWebSocketSampler>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="ForeCastChartAssertion" enabled="true">
            <stringProp name="JSON_PATH">.chartData</stringProp>
            <stringProp name="EXPECTED_VALUE">[[{&quot;infoTooltip&quot;:[],&quot;xAxis&quot;:[&quot;2015-01-01&quot;,&quot;2016-01-01&quot;,&quot;2017-01-01&quot;,&quot;2018-01-01&quot;,&quot;2019-01-01&quot;,&quot;2022-01-01&quot;],&quot;yAxis&quot;:[2131,2578,6573,2024,2544,2397],&quot;chartType&quot;:&quot;line&quot;,&quot;chartTitle&quot;:&quot;Ship Mode Count - Yearly Trend (Forecast)&quot;,&quot;xAxisLabel&quot;:&quot;ship_date&quot;,&quot;yAxisLabel&quot;:&quot;ship_mode_count&quot;}]]</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <eu.luminis.jmeter.wssampler.CloseWebSocketSampler guiclass="eu.luminis.jmeter.wssampler.CloseWebSocketSamplerGui" testclass="eu.luminis.jmeter.wssampler.CloseWebSocketSampler" testname="WebSocket Close" enabled="false">
          <stringProp name="statusCode">1000</stringProp>
          <stringProp name="readTimeout">6000</stringProp>
        </eu.luminis.jmeter.wssampler.CloseWebSocketSampler>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
